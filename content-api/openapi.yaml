openapi: 3.0.0

info:
  title: Emblem API
  description: REST API for any Emblem server
  version: '2021-09-01'

servers:
- url: https://example.com
  description: Development server

paths:
  /players:
    get:
      summary: Returns a list of players
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A JSON array of players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
        '403':
          description: Forbidden
        '404':
          description: not found. The path must have a typo
        default:
          description: Unexpected error

    post:
      summary: Create a new player
      security:
        - bearerAuth: []
      requestBody:
        description: JSON representation of a single player
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '403':
          description: Forbidden
        '404':
          description: player must have been misspelled in path

  /players/{id}:
    get:
      summary: returns a single player
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Player Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: JSON representation of an player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '403':
          description: Forbidden
        '404':
          description: not found
        default:
          description: Unexpected error

    patch:
      summary: updates a single player
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Player Id
          required: true
          schema:
            type: string
      requestBody:
        description: JSON representation of a single player
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '201':
          description: JSON representation of an player 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '403':
          description: Forbidden
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

    delete:
      summary: deletes a single player
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Player Id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
        '403':
          description: Forbidden
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

  /hosts:
    get:
      summary: Returns a list of hosts
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A JSON array of hosts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Host'
        '403':
          description: Forbidden
        '404':
          description: not found. The path must have a typo
        default:
          description: Unexpected error

    post:
      summary: Create a new host
      security:
        - bearerAuth: []
      requestBody:
        description: JSON representation of a single host
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Host'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
        '403':
          description: Forbidden
        '404':
          description: host must have been misspelled in path

  /hosts/{id}:
    get:
      summary: returns a single host
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Host Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: JSON representation of an host
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
        '403':
          description: Forbidden
        '404':
          description: not found
        default:
          description: Unexpected error

    patch:
      summary: updates a single host
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Host Id
          required: true
          schema:
            type: string
      requestBody:
        description: JSON representation of a single host
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Host'
      responses:
        '201':
          description: JSON representation of an host 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
        '403':
          description: Forbidden
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

    delete:
      summary: deletes a single host
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Host Id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
        '403':
          description: Forbidden
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

  /admins:
    get:
      summary: Returns a list of admins
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A JSON array of admins
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Admin'
        '403':
          description: Forbidden
        '404':
          description: not found. The path must have a typo
        default:
          description: Unexpected error

    post:
      summary: Create a new admin
      security:
        - bearerAuth: []
      requestBody:
        description: JSON representation of a single admin
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        '403':
          description: Forbidden
        '404':
          description: admin must have been misspelled in path

  /admins/{id}:
    get:
      summary: returns a single admin
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Admin Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: JSON representation of an admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        '403':
          description: Forbidden
        '404':
          description: not found
        default:
          description: Unexpected error

    patch:
      summary: updates a single admin
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Admin Id
          required: true
          schema:
            type: string
      requestBody:
        description: JSON representation of a single admin
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '201':
          description: JSON representation of an admin 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        '403':
          description: Forbidden
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

    delete:
      summary: deletes a single admin
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Admin Id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
        '403':
          description: Forbidden
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

  /quizzes:
    get:
      summary: Returns a list of quizzes
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A JSON array of quizzes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quiz'
        '403':
          description: Forbidden
        '404':
          description: not found. The path must have a typo
        default:
          description: Unexpected error

    post:
      summary: Create a new quiz
      security:
        - bearerAuth: []
      requestBody:
        description: JSON representation of a single quiz
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quiz'
        '403':
          description: Forbidden
        '404':
          description: quizzes must have been misspelled in path

  /quizzes/{id}:
    get:
      summary: returns a single quiz
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Quiz Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: JSON representation of a quiz
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quiz'
        '403':
          description: Forbidden
        '404':
          description: not found
        default:
          description: Unexpected error

    patch:
      summary: updates a single quiz
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Quiz Id
          required: true
          schema:
            type: string
      requestBody:
        description: JSON representation of a single quiz
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz'
      responses:
        '201':
          description: JSON representation of a quiz
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quiz'
        '403':
          description: Forbidden
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

    delete:
      summary: deletes a single quiz
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Quiz Id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
        '403':
          description: Forbidden
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

  /quizzes/{id}/results:
    get:
      summary: Returns a list of results objects for a specific quiz
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Quiz Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A JSON array of results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Results'
        '403':
          description: Forbidden
        '404':
          description: not found. The path must have a typo
        default:
          description: Unexpected error

    post:
      summary: Register a player for a quiz
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Quiz Id
          required: true
          schema:
            type: string
      requestBody:
        description: JSON representation of a results object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Results'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Results'
        '403':
          description: Forbidden
        '404':
          description: quizzes must have been misspelled in path

  /quizzes/{id}/results/{id2}:
    get:
      summary: returns a single results object for a specific quiz/player combination
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Quiz Id
          required: true
          schema:
            type: string
        - name: id2
          in: path
          description: Player Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: JSON representation of a results object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Results'
        '403':
          description: Forbidden
        '404':
          description: not found
        default:
          description: Unexpected error

    patch:
      summary: updates results for a specific quiz/player combination
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Quiz Id
          required: true
          schema:
            type: string
        - name: id2
          in: path
          description: Player Id
          required: true
          schema:
            type: string
      requestBody:
        description: JSON representation of a results object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Results'
      responses:
        '201':
          description: JSON representation of a results object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Results'
        '403':
          description: Forbidden
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

    delete:
      summary: deletes a results object for a specific quiz/player combination
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Quiz Id
          required: true
          schema:
            type: string
        - name: id2
          in: path
          description: Player Id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
        '403':
          description: Forbidden
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

  /generators:
    get:
      summary: Returns a list of generators
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A JSON array of generators
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Generator'
        '403':
          description: Forbidden
        '404':
          description: not found. The path must have a typo
        default:
          description: Unexpected error

    post:
      summary: Create a new generator
      security:
        - bearerAuth: []
      requestBody:
        description: JSON representation of a single generator
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Generator'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generator'
        '403':
          description: Forbidden
        '404':
          description: generator must have been misspelled in path

  /generators/{id}:
    get:
      summary: returns a single generator
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Generator Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: JSON representation of an generator
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generator'
        '403':
          description: Forbidden
        '404':
          description: not found
        default:
          description: Unexpected error

    patch:
      summary: updates a single generator
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Generator Id
          required: true
          schema:
            type: string
      requestBody:
        description: JSON representation of a single generator
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Generator'
      responses:
        '201':
          description: JSON representation of an generator 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generator'
        '403':
          description: Forbidden
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

    delete:
      summary: deletes a single generator
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Generator Id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
        '403':
          description: Forbidden
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

  /approvers:
    get:
      summary: Returns a list of approvers
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A JSON array of approvers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Approver'
        '403':
          description: Forbidden
        '404':
          description: not found. The path must have a typo
        default:
          description: Unexpected error

    post:
      summary: Create a new approver
      security:
        - bearerAuth: []
      requestBody:
        description: JSON representation of a single approver
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Approver'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approver'
        '403':
          description: Forbidden
        '404':
          description: approvers must have been misspelled in path

  /approvers/{id}:
    get:
      summary: returns a single approver
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Approver Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: JSON representation of a approver
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approver'
        '403':
          description: Forbidden
        '404':
          description: not found
        default:
          description: Unexpected error

    patch:
      summary: updates a single approver
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Approver Id
          required: true
          schema:
            type: string
      requestBody:
        description: JSON representation of a single approver
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Approver'
      responses:
        '201':
          description: JSON representation of a approver
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approver'
        '403':
          description: Forbidden
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

    delete:
      summary: deletes a single approver
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Approver Id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
        '403':
          description: Forbidden
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

  /campaigns:
    get:
      summary: Returns a list of campaigns
      responses:
        '200':
          description: A JSON array of campaigns
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Campaign'
        '404':
          description: not found. The path must have a typo
        default:
          description: Unexpected error

    post:
      summary: Create a new campaign
      security:
        - bearerAuth: []
      requestBody:
        description: JSON representation of a single campaign
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
        '404':
          description: campaigns must have been misspelled in path

  /campaigns/{id}:
    get:
      summary: returns a single campaign
      parameters:
        - name: id
          in: path
          description: Campaign Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: JSON representation of a campaign
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
        '404':
          description: not found
        default:
          description: Unexpected error

    patch:
      summary: updates a single campaign
      parameters:
        - name: id
          in: path
          description: Campaign Id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      requestBody:
        description: JSON representation of a single campaign
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
      responses:
        '201':
          description: JSON representation of a campaign
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

    delete:
      summary: deletes a single campaign
      parameters:
        - name: id
          in: path
          description: Campaign Id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: No content
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

  /campaigns/{id}/donations:
    get:
      summary: lists all donations for the specified campaign
      parameters:
        - name: id
          in: path
          description: Campaign Id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: JSON representation of an array of donations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Donation'
        '404':
          description: not found
        default:
          description: Unexpected error

  /causes:
    get:
      summary: Returns a list of causes
      responses:
        '200':
          description: A JSON array of causes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cause'
        '404':
          description: not found. The path must have a typo
        default:
          description: Unexpected error

    post:
      summary: Create a new cause
      security:
        - bearerAuth: []
      requestBody:
        description: JSON representation of a single cause
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cause'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cause'
        '404':
          description: causes must have been misspelled in path

  /causes/{id}:
    get:
      summary: returns a single cause
      parameters:
        - name: id
          in: path
          description: Cause Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: JSON representation of a cause
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cause'
        '404':
          description: not found
        default:
          description: Unexpected error

    patch:
      summary: updates a single cause
      parameters:
        - name: id
          in: path
          description: Cause Id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      requestBody:
        description: JSON representation of a single cause
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cause'
      responses:
        '201':
          description: JSON representation of a cause
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cause'
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

    delete:
      summary: deletes a single cause
      parameters:
        - name: id
          in: path
          description: Cause Id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: No content
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

  /donations:
    get:
      summary: Returns a list of donations
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A JSON array of donations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Donation'
        '404':
          description: not found. The path must have a typo
        default:
          description: Unexpected error

    post:
      summary: Create a new donation
      security:
        - bearerAuth: []
      requestBody:
        description: JSON representation of a single donation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Donation'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Donation'
        '404':
          description: donations must have been misspelled in path

  /donations/{id}:
    get:
      summary: returns a single donation
      parameters:
        - name: id
          in: path
          description: Donation Id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: JSON representation of a donation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Donation'
        '404':
          description: not found
        default:
          description: Unexpected error

    patch:
      summary: updates a single donation
      parameters:
        - name: id
          in: path
          description: Donation Id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      requestBody:
        description: JSON representation of a single donation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Donation'
      responses:
        '201':
          description: JSON representation of a donation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Donation'
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

    delete:
      summary: deletes a single donation
      parameters:
        - name: id
          in: path
          description: Donation Id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: No content
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

  /donors:
    get:
      summary: Returns a list of donors
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A JSON array of donors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Donor'
        '404':
          description: not found. The path must have a typo
        default:
          description: Unexpected error

    post:
      summary: Create a new donor or update existing donor with matching
        email address. Email address should uniquely specify a donor.
      security:
        - bearerAuth: []
      requestBody:
        description: JSON representation of a single donor
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Donor'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Donor'
        '404':
          description: donors must have been misspelled in path

  /donors/{id}:
    get:
      summary: returns a single donor
      parameters:
        - name: id
          in: path
          description: Donor Id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: JSON representation of a donor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Donor'
        '404':
          description: not found
        default:
          description: Unexpected error

    patch:
      summary: updates a single donor
      parameters:
        - name: id
          in: path
          description: Donor Id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      requestBody:
        description: JSON representation of a single donor
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Donor'
      responses:
        '201':
          description: JSON representation of a donor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Donor'
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

    delete:
      summary: deletes a single donor
      parameters:
        - name: id
          in: path
          description: Donor Id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: No content
        '404':
          description: not found
        '409':
          description: Conflict. If-Match header provided does not match current contents
        default:
          description: Unexpected error

  /donors/{id}/donations:
    get:
      summary: lists all donations for the specified donor
      parameters:
        - name: id
          in: path
          description: Donor Id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: JSON representation of an array of donations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Donation'
        '404':
          description: not found
        default:
          description: Unexpected error

components:
  schemas:
    Player:
      required:
      - name
      - email
      properties:
        id:
          type: string
          readOnly: true
          description: unique, system-assigned identifier
        name:
          type: string
          description: the display name of this player
        email:
          type: string
          description: the email address of this player
        timeCreated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned creation timestamp
        updated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned update timestamp
        selfLink:
          type: string
          format: uri
          readOnly: true
          description: full URI of the resource

    Host:
      required:
      - name
      - email
      properties:
        id:
          type: string
          readOnly: true
          description: unique, system-assigned identifier
        name:
          type: string
          description: the display name of this host
        email:
          type: string
          description: the email address of this host
        timeCreated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned creation timestamp
        updated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned update timestamp
        selfLink:
          type: string
          format: uri
          readOnly: true
          description: full URI of the resource

    Admin:
      required:
      - name
      - email
      properties:
        id:
          type: string
          readOnly: true
          description: unique, system-assigned identifier
        name:
          type: string
          description: the display name of this admin
        email:
          type: string
          description: the email address of this admin
        timeCreated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned creation timestamp
        updated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned update timestamp
        selfLink:
          type: string
          format: uri
          readOnly: true
          description: full URI of the resource

    Quiz:
      required:
      - name
      properties:
        id:
          type: string
          readOnly: true
          description: unique, system-assigned identifier
        name:
          type: string
          description: the display name of this quiz
        description:
          type: string
          description: a short description of the quiz
        freeform:
          type: boolean
          nullable: true
          description: whether this quiz supports free-form answers
        runCount:
          type: integer
          nullable: true
          description: number of times quiz has been run
        host:
          type: string
          nullable: true
          description: the id of the host
        playUrl:
          type: string
          nullable: true
          description: URL for playing this quiz
        pin:
          type: string
          nullable: true
          description: pin code for playing this quiz
        topic:
          type: string
          nullable: true
          description: the topic of this quiz
        anonymous:
          type: boolean
          description: whether players may be anonymous
          nullable: true
          default: true
        imageUrl:
          type: string
          description: string containing URL of an image to display for this quiz
          nullable: true
          default: ""
        difficulty:
          type: string 
          description: integer level of difficulty (1-10)
          default: "5"
        timeLimit:
          type: string
          description: number of seconds to respond to each question in this quiz (3-300)
          default: "60"
        numQuestions:
          type: string
          description: number of questions included in this quiz
          default: "10"
        numAnswers:
          type: string
          description: number of answers possible for each question in this quiz (0 == free form)
          default: "4"
        sync:
          type: boolean
          description: is this quiz synchronous (false == asynchronous)
          default: true
        active:
          type: boolean
          description: is this quiz currently being played?
          nullable: true
          default: false
        QandA:
          type: array
          description: array of question/answer objects included in this quiz
          nullable: true
          default: []
          items:
            type: object
            description: question and associated possible answers 
            required:
            - question
            - correct
            - responses
            properties:
              question:
                type: string
                description: question text
              correct:
                type: string
                description: answer text (free form) or integer (multiple choice)
              responses:
                type: array
                description: possible multiple choice answers to this question
                default: []
                items:
                  type: string
        results:
          $ref: '#/components/schemas/Results'
        timeCreated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned creation timestamp
        updated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned update timestamp
        selfLink:
          type: string
          format: uri
          readOnly: true
          description: full URI of the resource

    Results:
      properties:
        id:
          type: string
          readOnly: true
          description: unique, system-assigned identifier
        quiz:
          type: string
          description: id of the quiz associated with these results
        player:
          type: string
          description: id of the player associated with these results
        responses:
          type: array
          description: array of responses
          items:
            type: string
          default: []
        timeCreated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned creation timestamp
        updated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned update timestamp
        selfLink:
          type: string
          format: uri
          readOnly: true
          description: full URI of the resource

    Generator:
      required:
      - name
      properties:
        id:
          type: string
          readOnly: true
          description: unique, system-assigned identifier
        name:
          type: string
          description: the display name of this generator
        freeform:
          type: boolean
          description: whether this generator supports free-form answers
          default: false
        topic_list:
          type: array
          description: array of topics supported by this generator (empty == unlimited)
          items: 
            type: string
        timeCreated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned creation timestamp
        updated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned update timestamp
        selfLink:
          type: string
          format: uri
          readOnly: true
          description: full URI of the resource

    Approver:
      required:
      - email
      properties:
        id:
          type: string
          readOnly: true
          description: unique, system-assigned identifier
        name:
          type: string
          nullable: true
          description: the display name of this Approver
        email:
          type: string
          description: the Approver's email address
        active:
          type: boolean
          default: false
          description: is this approver currently active?
        timeCreated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned creation timestamp
        updated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned update timestamp
        selfLink:
          type: string
          format: uri
          readOnly: true
          description: full URI of the resource

    Campaign:
      required:
      - name
      - cause
      properties:
        id:
          type: string
          readOnly: true
          description: unique, system-assigned identifier
        name:
          type: string
          description: the campaign's display name
        description:
          type: string
          default: "no description"
          description: the purpose of the campaign
        cause:
          type: string
          description: the id of the Cause this campaign is for
        managers:
          type: array
          default: []
          items:
            type: string
            format: email
            description: a manager's email address
        goal:
          type: number
          default: 0
          description: the fundraising goal, in USD
        imageUrl:
          type: string
          format: uri
          nullable: true
          description: location of image to display for the campaign
        active:
          type: boolean
          default: false
          description: is this campaign accepting donations at this time?
        timeCreated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned creation timestamp
        updated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned update timestamp
        selfLink:
          type: string
          format: uri
          readOnly: true
          description: full URI of the resource

    Cause:
      required:
      - name
      properties:
        id:
          type: string
          readOnly: true
          description: unique, system-assigned identifier
        name:
          type: string
          description: the cause's display name
        description:
          type: string
          default: "no description"
          description: the purpose of the cause
        imageUrl:
          type: string
          format: uri
          nullable: true
          description: location of image to display for the cause
        active:
          type: boolean
          default: false
          description: is this cause accepting donations at this time?
        timeCreated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned creation timestamp
        updated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned update timestamp
        selfLink:
          type: string
          format: uri
          readOnly: true
          description: full URI of the resource

    Donation:
      required:
      - campaign
      - donor
      - amount
      properties:
        id:
          type: string
          readOnly: true
          description: unique, system-assigned identifier
        campaign:
          type: string
          description: the id of the campaign this donation is for
        donor:
          type: string
          description: the id of the donor this donation is from
        amount:
          type: number
          description: the amount donated, in USD
        timeCreated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned creation timestamp
        updated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned update timestamp
        selfLink:
          type: string
          format: uri
          readOnly: true
          description: full URI of the resource

    Donor:
      required:
      - name
      - email
      properties:
        id:
          type: string
          readOnly: true
          description: unique, system-assigned identifier
        name:
          type: string
          description: the display name of this donor
        email:
          type: string
          description: the donor's email address
        mailing_address:
          type: string
          nullable: true
          description: the donor's physical address
        timeCreated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned creation timestamp
        updated:
          type: string
          format: date-time
          readOnly: true
          description: system-assigned update timestamp
        selfLink:
          type: string
          format: uri
          readOnly: true
          description: full URI of the resource

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
