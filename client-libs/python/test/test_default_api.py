"""
    Emblem API

    REST API for any Emblem server  # noqa: E501

    The version of the OpenAPI document: 2021-09-01
    Generated by: https://openapi-generator.tech
"""


import unittest

import openapi_client
from openapi_client.api.default_api import DefaultApi  # noqa: E501


class TestDefaultApi(unittest.TestCase):
    """DefaultApi unit test stubs"""

    def setUp(self):
        self.api = DefaultApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_admins_get(self):
        """Test case for admins_get

        Returns a list of admins  # noqa: E501
        """
        pass

    def test_admins_id_delete(self):
        """Test case for admins_id_delete

        deletes a single admin  # noqa: E501
        """
        pass

    def test_admins_id_get(self):
        """Test case for admins_id_get

        returns a single admin  # noqa: E501
        """
        pass

    def test_admins_id_patch(self):
        """Test case for admins_id_patch

        updates a single admin  # noqa: E501
        """
        pass

    def test_admins_post(self):
        """Test case for admins_post

        Create a new admin  # noqa: E501
        """
        pass

    def test_approvers_get(self):
        """Test case for approvers_get

        Returns a list of approvers  # noqa: E501
        """
        pass

    def test_approvers_id_delete(self):
        """Test case for approvers_id_delete

        deletes a single approver  # noqa: E501
        """
        pass

    def test_approvers_id_get(self):
        """Test case for approvers_id_get

        returns a single approver  # noqa: E501
        """
        pass

    def test_approvers_id_patch(self):
        """Test case for approvers_id_patch

        updates a single approver  # noqa: E501
        """
        pass

    def test_approvers_post(self):
        """Test case for approvers_post

        Create a new approver  # noqa: E501
        """
        pass

    def test_campaigns_get(self):
        """Test case for campaigns_get

        Returns a list of campaigns  # noqa: E501
        """
        pass

    def test_campaigns_id_delete(self):
        """Test case for campaigns_id_delete

        deletes a single campaign  # noqa: E501
        """
        pass

    def test_campaigns_id_donations_get(self):
        """Test case for campaigns_id_donations_get

        lists all donations for the specified campaign  # noqa: E501
        """
        pass

    def test_campaigns_id_get(self):
        """Test case for campaigns_id_get

        returns a single campaign  # noqa: E501
        """
        pass

    def test_campaigns_id_patch(self):
        """Test case for campaigns_id_patch

        updates a single campaign  # noqa: E501
        """
        pass

    def test_campaigns_post(self):
        """Test case for campaigns_post

        Create a new campaign  # noqa: E501
        """
        pass

    def test_causes_get(self):
        """Test case for causes_get

        Returns a list of causes  # noqa: E501
        """
        pass

    def test_causes_id_delete(self):
        """Test case for causes_id_delete

        deletes a single cause  # noqa: E501
        """
        pass

    def test_causes_id_get(self):
        """Test case for causes_id_get

        returns a single cause  # noqa: E501
        """
        pass

    def test_causes_id_patch(self):
        """Test case for causes_id_patch

        updates a single cause  # noqa: E501
        """
        pass

    def test_causes_post(self):
        """Test case for causes_post

        Create a new cause  # noqa: E501
        """
        pass

    def test_donations_get(self):
        """Test case for donations_get

        Returns a list of donations  # noqa: E501
        """
        pass

    def test_donations_id_delete(self):
        """Test case for donations_id_delete

        deletes a single donation  # noqa: E501
        """
        pass

    def test_donations_id_get(self):
        """Test case for donations_id_get

        returns a single donation  # noqa: E501
        """
        pass

    def test_donations_id_patch(self):
        """Test case for donations_id_patch

        updates a single donation  # noqa: E501
        """
        pass

    def test_donations_post(self):
        """Test case for donations_post

        Create a new donation  # noqa: E501
        """
        pass

    def test_donors_get(self):
        """Test case for donors_get

        Returns a list of donors  # noqa: E501
        """
        pass

    def test_donors_id_delete(self):
        """Test case for donors_id_delete

        deletes a single donor  # noqa: E501
        """
        pass

    def test_donors_id_donations_get(self):
        """Test case for donors_id_donations_get

        lists all donations for the specified donor  # noqa: E501
        """
        pass

    def test_donors_id_get(self):
        """Test case for donors_id_get

        returns a single donor  # noqa: E501
        """
        pass

    def test_donors_id_patch(self):
        """Test case for donors_id_patch

        updates a single donor  # noqa: E501
        """
        pass

    def test_donors_post(self):
        """Test case for donors_post

        Create a new donor or update existing donor with matching email address. Email address should uniquely specify a donor.  # noqa: E501
        """
        pass

    def test_generators_get(self):
        """Test case for generators_get

        Returns a list of generators  # noqa: E501
        """
        pass

    def test_generators_id_delete(self):
        """Test case for generators_id_delete

        deletes a single generator  # noqa: E501
        """
        pass

    def test_generators_id_get(self):
        """Test case for generators_id_get

        returns a single generator  # noqa: E501
        """
        pass

    def test_generators_id_patch(self):
        """Test case for generators_id_patch

        updates a single generator  # noqa: E501
        """
        pass

    def test_generators_post(self):
        """Test case for generators_post

        Create a new generator  # noqa: E501
        """
        pass

    def test_hosts_get(self):
        """Test case for hosts_get

        Returns a list of hosts  # noqa: E501
        """
        pass

    def test_hosts_id_delete(self):
        """Test case for hosts_id_delete

        deletes a single host  # noqa: E501
        """
        pass

    def test_hosts_id_get(self):
        """Test case for hosts_id_get

        returns a single host  # noqa: E501
        """
        pass

    def test_hosts_id_patch(self):
        """Test case for hosts_id_patch

        updates a single host  # noqa: E501
        """
        pass

    def test_hosts_post(self):
        """Test case for hosts_post

        Create a new host  # noqa: E501
        """
        pass

    def test_players_get(self):
        """Test case for players_get

        Returns a list of players  # noqa: E501
        """
        pass

    def test_players_id_delete(self):
        """Test case for players_id_delete

        deletes a single player  # noqa: E501
        """
        pass

    def test_players_id_get(self):
        """Test case for players_id_get

        returns a single player  # noqa: E501
        """
        pass

    def test_players_id_patch(self):
        """Test case for players_id_patch

        updates a single player  # noqa: E501
        """
        pass

    def test_players_post(self):
        """Test case for players_post

        Create a new player  # noqa: E501
        """
        pass

    def test_quizzes_get(self):
        """Test case for quizzes_get

        Returns a list of quizzes  # noqa: E501
        """
        pass

    def test_quizzes_id_delete(self):
        """Test case for quizzes_id_delete

        deletes a single quiz  # noqa: E501
        """
        pass

    def test_quizzes_id_get(self):
        """Test case for quizzes_id_get

        returns a single quiz  # noqa: E501
        """
        pass

    def test_quizzes_id_patch(self):
        """Test case for quizzes_id_patch

        updates a single quiz  # noqa: E501
        """
        pass

    def test_quizzes_post(self):
        """Test case for quizzes_post

        Create a new quiz  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
